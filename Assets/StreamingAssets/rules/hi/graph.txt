# Check for infinitive
# General rule format: pattern -> action
r1(x,y) r2(y,z);[r1=obj|pur,r2=agt,'x=V,'y=V] -> error # He wanted to go -- go cannot have agent
r1(x,y) !r2(y,z);[r1=obj|pur,r2=agt,'x=V,'y=V,y.@quote] -> pass # He told him, "Sleep" -- Sleep does not have agent, but is not infinitive
r1(x,y) !r2(y,z);[r1=obj|pur|rsn|cnt,r2=agt,'x=V,'y=V] -> y.@infinitive
#
# Case marking
#
#
# - Obligation
r(x,y);[r=agt,'x=V,'y=N,x.@obligation] -> y.@Caccusative,y.@oblique   # usko jana hai
#
# 1. Ergative
r(x,y) r2(x,z);[r=agt,r2=obj,'x=V,'y=N,x.@perfective] -> y.@Cergative,y.@oblique   # Cergative marks 'ne'
# 2. Accusative
# TODO: support checking multiple attributes also
r(x,y);[r=obj,'x=V,'y=N,y.@def] -> y.@Caccusative,y.@oblique   # Caccusative marks 'ko'
r(x,y);[r=obj,'x=V,'y=N,y.@proximal] -> y.@Caccusative,y.@oblique   # Caccusative marks 'ko'
r(x,y);[r=obj,'x=V,'y=N,y.@distal] -> y.@Caccusative,y.@oblique   # Caccusative marks 'ko'
r(x,y);[r=obj,'x=V,'y=N,y.@animate] -> y.@Caccusative,y.@oblique   # Caccusative marks 'ko'
r(x,y);[r=obj,'x=V,'y=N,y.@pronoun] -> y.@Caccusative,y.@oblique   # Caccusative marks 'ko'
# 3. Dative
r(x,y);[r=gol,'x=V,'y=N] -> y.@Cdative,y.@oblique   # Cdative marks 'ko'
# 4. Beneficiary
r(x,y);[r=ben,'x=V,'y=N] -> y.@Cbeneficiary,y.@oblique   # Cdative marks 'ko'
# 5. Content
r(x,y);[r=cnt,'x=V,'y=N] -> y.@CgenitiveP,y.@oblique   # Cdative marks 'ko'
# 6. Instrument
r(x,y);[r=ins,'x=V,'y=N] -> y.@Cinstrumental,y.@oblique   # Cinstrumental marks 'se'
# 
# Agreement rules
# 
r(x,y);[r=agt,'x=V,'y=N,!y.@Cergative] -> x<y.@male|@female|@pl|@singular|@1|@2|@3|@honorific|@nonhonorific
r(x,y) r2(x,z);[r=agt,'x=V,'y=N,r2=obj,'z=N,y.@Cergative,!z.@Caccusative] -> x<z.@male|@female|@pl|@singular|@1|@2|@3|@honorific|@nonhonorific
r(x,y) r2(x,z);[r=agt,'x=V,'y=N,r2=obj,'z=N,y.@Cergative,z.@Caccusative] -> x.@male,x.@singular
r(x,y);[r=pos,'x=N,'y=N,x.@male,x.@singular,!x.@oblique] -> y.@CgenitiveM,y.@oblique   # Caccusative marks 'ko'
r(x,y);[r=pos,'x=N,'y=N,x.@male,x.@singular,x.@oblique] -> y.@CgenitiveP,y.@oblique   # Caccusative marks 'ko'
r(x,y);[r=pos,'x=N,'y=N,x.@male,x.@pl] -> y.@CgenitiveP,y.@oblique   # Caccusative marks 'ko'
r(x,y);[r=pos,'x=N,'y=N,x.@female] -> y.@CgenitiveF,y.@oblique   # Caccusative marks 'ko'
r(x,y);[r=mod,'x=N,'y=J] -> y<x.@male|@female|@pl|@singular|@oblique
#
#
# Handling quantities
#
r1(x,y);[r1=qua,'x=N,'y=Num,'y='1] -> x.@singular,!x.@pl,x.@generic,!x.@ddef # If qua==1, singular
r1(x,y);[r1=qua,'x=N,'y=Num,!'y='1] -> !x.@singular,x.@pl # If qua!=1, plural
r1(x,y);[r1=qua,'x=V,'y=Num] -> y.@times
#
# Handling aoj
#
# r(x,y);[r=aoj,'x=J,'y=N] -> r1(z,x) r2(z,y);[r1=agt,r2=obj;z=be]
